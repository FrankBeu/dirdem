* flask-htmx-tailwind
** INFO
*** SOURCES
**** flask is based on
https://github.com/testdrivenio/flask-htmx-tailwind
** SETUP
add files needed for flask
add node-packages from package.lock
#+begin_src shell :results drawer
nixify
node2nix -l
#+end_src
** get ip
#+begin_src shell :results drawer
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com
#+end_src
** serve via ipv6
*** run flask
#+begin_src shell :results drawer
  flask run --host='::' --port=8080
#+end_src
*** curl
#+begin_src shell :results drawer
curl -g -6 'http://[2a02:8070:279d:2700:4754:be88:8d7:61ac]:8080'
#+end_src
*** router
| Quell IPv6 | Ziel IPv6 | Protokoll | Quellport | Zielport | Erlauben | Aktivier | LÃ¶schen |
|            |           |           |           |          |          |          |         |
| All        | All       | TCP       | 1 : 65535 |     8080 |        1 |        1 |       0 |
** only ~devel~ has hot reload
** environment
*** in order to change the env
edit =shell.nix=
stop flask
reload =shell.nix=
*** change on =settings.json=
needs a flask-restart
** TODO TODOS
*** =default.nix= needs python implementation
** DEVEL
*** INITIALISATION
in =pyproj.toml=
1. rename project ~name~
2. add to   project ~authors~
   #+begin_example shell
   "NAME SURNAME <EMAIL>"
   #+end_example
*** direnv
**** reload direnv
***** XOR
#+begin_example shell
  nfs
  nfd
  nff
#+end_example
*** flask
https://flask.palletsprojects.com/en/2.0.x/
https://flask.palletsprojects.com/en/2.0.x/quickstart/#a-minimal-application
**** run
#+begin_src shell :results drawer
  flask run
#+end_src
**** debug
~FLASK_ENV=development~ sets ~FLASK_DEBUG=1~
*** poetry
https://python-poetry.org/docs/
**** commands
***** add dependency
#+begin_src shell :results drawer
poetry add requests
#+end_src
***** remove dependency
#+begin_src shell :results drawer
poetry remove requests
#+end_src
***** create lockFile
#+begin_src shell :results drawer
poetry lock --no-update
#+end_src
***** clear cache
#+begin_src shell :results drawer
poetry cache clear --all .
#+end_src
**** poetry2nix
uses =default.nix=
#+begin_src shell :results drawer
  nix-build
#+end_src
*** python-pytest
searches the project-root to find the executable and tests
**** create
***** OR
- git repo
- =.projectile=
- =.dir-locals.el=
   #+begin_src elisp
   ((nil . ((eval . (setq projectile-project-root file-name-directory)))))
   #+end_src
**** commands
***** reload dir-local
~fb/reload-dir-locals-current-buffer~
=SPC r d b=
***** invalidate projectRoot (projectileCache)
~projectile-invalidate-cache~
=SPC p i=
*** npm
**** add to =package.json= without installing
#+begin_src shell :results drawer
npm install --package-lock-only --no-package-lock @tailwindcss/custom-forms --save-dev
#+end_src


